# References:
# https://github.com/marketplace/actions/flutter-action
# https://damienaicheh.github.io/flutter/github/actions/2021/05/06/flutter-tests-github-actions-codecov-en.html
# https://medium.com/mobile-development-group/github-actions-for-flutter-cf02923d7b5d
# https://petercoding.com/flutter/2021/07/18/using-github-actions-with-flutter/
# https://www.raywenderlich.com/19407406-continuous-delivery-for-android-using-github-actions
# https://medium.com/@iqan/continuously-releasing-flutter-app-to-play-store-using-github-actions-eca2f5f6e996
# https://blog.codemagic.io/ci-cd-for-flutter-with-fastlane-codemagic/

# TODOs:
# cache dependencies for flutter/dart and ruby

name: Todos CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '15.x'
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.5.3'
          channel: 'stable'
      - name: Generate dummy env file
        run: |
          echo "APPSYNC_ENDPOINT=$APPSYNC_ENDPOINT" >> .env
          echo "APPSYNC_AUTHORIZATION_TYPE=AMAZON_COGNITO_USER_POOLS" >> .env
          echo "COGNITO_USER_POOL_ID=$COGNITO_USER_POOL_ID" >> .env
          echo "COGNITO_APP_CLIENT_ID=$COGNITO_APP_CLIENT_ID" >> .env
          echo "COGNITO_AUTH_FLOW_TYPE=USER_SRP_AUTH" >> .env
          echo "AWS_REGION=ap-southeast-2" >> .env
      - name: Show dummy env file
        run: |
          pwd
          ls -al
          cat .env
      - name: Restore packages
        run: flutter pub get
      - name: Check code lint rules
        run: flutter format --set-exit-if-changed .
      - name: Run static anaylysis
        run: flutter analyze .
      - name: Run Flutter code coverage workaround
        run: ./flutter-test-coverage-fix.sh
      - name: Run Unit Tests
        run: flutter test --coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          fail_ci_if_error: true
          verbose: true
